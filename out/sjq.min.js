// SJQ - a Simple, Lightweight jQuery API
// (c) Zoweb 2016 (MIT License)
(function(){function isNode(o){return typeof Node==="object"?o instanceof Node:o&&(typeof o==="object"&&(typeof o.nodeType==="number"&&typeof o.nodeName==="string"))}function isElement(o){return typeof HTMLElement==="object"?o instanceof HTMLElement:o&&(typeof o==="object"&&(o!==null&&(o.nodeType===1&&typeof o.nodeName==="string")))}function sjq(selector,context){return new SJQ(selector,context)}
function SJQ(selector,context){if(this.__proto__.constructor!==SJQ)return new SJQ(selector,context);this.SJQ_INFO=SJQ.info;var element;if(typeof selector=="string")element=document.querySelectorAll(selector);if(typeof selector=="object"&&!isNode(selector)){element=selector.objects;selector=selector.selector}if(typeof selector=="object"&&isNode(selector)){element=selector;selector="HTMLElement"}if(typeof selector=="undefined"){console.error("SJQ requires parameter SELECTOR");return SJQ}this.selector=
selector;this.context=context;this.objects=[];for(var i=0;i<element.length;i++)this.objects[i]=element[i];if(this.objects.length==0)this.objects[0]=element}SJQ.fn=SJQ.prototype;sjq.fn=SJQ.fn;window.$=window.sjq=sjq;window.SJQ=SJQ;$.fn.css=function(name,attr){if(typeof name=="string"){var style=name.replace(/-(.)/g,function(match,p1,offset){var upperCase=p1.toUpperCase();return upperCase});if(attr)return this.each(function(){if(typeof attr=="number")attr+="px";this.objects[0].style[style]=attr});else return window.getComputedStyle(this.objects[0])[style]}};$.fn.html=function(html){if(!html)return this.objects[0].innerHTML;else return this.each(function(){this.objects[0].innerHTML=html})};$.fn.text=function(text){if(!text)return this.objects[0].textContent;else return this.each(function(){this.objects[0].textContent=text})};var SJQ_VERSION="1.1.0";SJQ.info={version:SJQ_VERSION,author:"zoweb",src:"https://github.com/zoweb/sjq",code:"http://code.zoweb.me/sjq/sjq-"+SJQ_VERSION+".js",license:"MIT"};$.fn.attr=function(attrName,attrValue){if(!attrValue)return this.objects[0].getAttribute(attrName);else return this.each(function(){this.objects[0].setAttribute(attrName,attrValue)})};$.fn.get=function(index){return typeof index=="number"?this.objects[index]:this.objects};$.fn.each=function(fn){for(var i=0;i<this.objects.length;i++)fn.call($(this.objects[i]),i,$(this.objects[i]));return this};})();
// SJQ: http://github.com/zoweb/sjq
/** 
* @ignore
**/